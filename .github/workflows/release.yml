on:
  push:
    branches: [master]

name: Publish release

jobs:
  build:
    name: Build, upload and release in the appstore
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get current tag
        id: tag
        run: |
          git fetch --tags --force
          tag=$(git tag -l --points-at HEAD)
          echo CURRENT TAG IS '"'${tag}'"'
          # returns 1 if it does not match
          echo "##### Check tag"
          echo $tag | grep "v[0-9]\+\.[0-9]\+\.[0-9]\+"
          echo "##### Set output"
          echo "##[set-output name=currenttag;]$tag"

      - name: Build project
        if: success()
        id: build_release
        run: |
          echo "###### copy certificate"
          mkdir -p ~/.nextcloud/certificates
          echo "$APP_CRT" > ~/.nextcloud/certificates/cospend.crt
          echo "$APP_KEY" > ~/.nextcloud/certificates/cospend.key
          echo "###### install dependencies"
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update -yqq
          sudo apt-get install php7.4-mbstring php7.4-sqlite3 npm make openssl -yqq > /dev/null 2>&1
          echo "#### installing nextcloud"
          mkdir ~/html
          git clone https://github.com/nextcloud/server.git --recursive --depth 1 -b stable20 ~/html/nextcloud
          sed -i $'s|if (substr($fullPath, 0, strlen($root) + 1) === $root . \'/\')|if (is_string($root) and substr($fullPath, 0, strlen($root) + 1) === $root . \'/\')|g' ~/html/nextcloud/lib/autoloader.php
          cp -r $GITHUB_WORKSPACE ~/html/nextcloud/apps/cospend
          php ~/html/nextcloud/occ maintenance:install --database "sqlite" --admin-user "admin" --admin-pass "password"
          php ~/html/nextcloud/occ app:enable cospend
          php ~/html/nextcloud/occ maintenance:mode --off
          cd ~/html/nextcloud/apps/cospend
          echo "###### make"
          webserveruser=runner occ_dir=~/html/nextcloud make > /dev/null
          echo "###### make appstore"
          tag=${{ steps.tag.outputs.currenttag }}
          version=${tag/v/}
          webserveruser=runner occ_dir=~/html/nextcloud version=$version make appstore
          echo "##[set-output name=version;]$version"
        env:
          APP_CRT: ${{ secrets.APP_CRT }}
          APP_KEY: ${{ secrets.APP_KEY }}

      - name: Create Release
        if: success()
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.currenttag }}
          release_name: ${{ steps.tag.outputs.currenttag }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        if: success()
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /tmp/build/cospend-${{ steps.build_release.outputs.version }}.tar.gz
          asset_name: cospend-${{ steps.build_release.outputs.version }}.tar.gz
          asset_content_type: application/gzip

      - name: Publish to appstore
        if: success()
        id: publish
        run: |
          SIGNATURE=$(cat /tmp/build/sign.txt | tr -d '\n' )
          VERSION=${{ steps.build_release.outputs.version }}
          DOWNLOAD_URL=https://github.com/eneiluj/cospend-nc/releases/download/v${VERSION}/cospend-${VERSION}.tar.gz
          echo curl -X POST -H "Authorization: Token $APPSTORE_TOKEN" https://apps.nextcloud.com/api/v1/apps/releases -H "Content-Type: application/json" -d '{"download":"'$DOWNLOAD_URL'", "signature": "'$SIGNATURE'"}'
        env:
          APPSTORE_TOKEN: ${{ secrets.APPSTORE_TOKEN }}
